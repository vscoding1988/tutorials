/* tslint:disable */
/* eslint-disable */
/**
 * Short Url API
 * Short Url API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  UrlCreationRequest,
  UrlDTO,
  UrlRequest,
  UrlResponse,
} from '../models/index';
import {
    UrlCreationRequestFromJSON,
    UrlCreationRequestToJSON,
    UrlDTOFromJSON,
    UrlDTOToJSON,
    UrlRequestFromJSON,
    UrlRequestToJSON,
    UrlResponseFromJSON,
    UrlResponseToJSON,
} from '../models/index';

export interface CreateRequest {
    urlCreationRequest: UrlCreationRequest;
}

export interface FindUrlsRequest {
    urlRequest: UrlRequest;
}

/**
 * 
 */
export class ShortUrlApi extends runtime.BaseAPI {

    /**
     */
    async createRaw(requestParameters: CreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UrlDTO>> {
        if (requestParameters['urlCreationRequest'] == null) {
            throw new runtime.RequiredError(
                'urlCreationRequest',
                'Required parameter "urlCreationRequest" was null or undefined when calling create().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/create`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: UrlCreationRequestToJSON(requestParameters['urlCreationRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UrlDTOFromJSON(jsonValue));
    }

    /**
     */
    async create(requestParameters: CreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UrlDTO> {
        const response = await this.createRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async findUrlsRaw(requestParameters: FindUrlsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UrlResponse>> {
        if (requestParameters['urlRequest'] == null) {
            throw new runtime.RequiredError(
                'urlRequest',
                'Required parameter "urlRequest" was null or undefined when calling findUrls().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/urls`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: UrlRequestToJSON(requestParameters['urlRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UrlResponseFromJSON(jsonValue));
    }

    /**
     */
    async findUrls(requestParameters: FindUrlsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UrlResponse> {
        const response = await this.findUrlsRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
